name: build-vsix
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) Detectar carpeta raíz de la extensión (la que contiene engines.vscode)
      - name: Detect extension root
        id: root
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          roots=()
          for f in **/package.json; do
            if grep -q '"vscode"' "$f"; then roots+=("$(dirname "$f")"); fi
          done
          if [ ${#roots[@]} -eq 0 ]; then
            echo "::error::No se encontró package.json con engines.vscode"; exit 1
          fi
          echo "dir=${roots[0]}" >> "$GITHUB_OUTPUT"
          echo "Usando ${roots[0]}"

      # 2) Node 14 para instalar deps y compilar (sqlite3@4.2.0 necesita toolchain antiguo)
      - name: Setup Node 14.x
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'

      - name: Node/npm versions
        run: |
          node -v
          npm -v

      - name: Install dependencies (npm)
        working-directory: ${{ steps.root.outputs.dir }}
        shell: bash
        run: |
          set -e
          # si hay lock antiguo, deja que npm lo actualice; evita auditoría para ir más rápido/limpio
          if [ -f package-lock.json ]; then
            npm install --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Build (if scripts exist)
        working-directory: ${{ steps.root.outputs.dir }}
        shell: bash
        run: |
          set -e
          if npm run | grep -q "^  vscode:prepublish"; then
            npm run vscode:prepublish
          elif npm run | grep -q "^  compile"; then
            npm run compile
          else
            echo "Sin script de build; continúo."
          fi

      # 3) Empaquetar con versión antigua de vsce compatible con Node 14
      - name: Package with vsce@1.93.0 (Node 14)
        working-directory: ${{ steps.root.outputs.dir }}
        shell: bash
        run: |
          set -e
          npx vsce@1.93.0 --version
          # --no-dependencies evita que vsce toque node_modules
          npx vsce@1.93.0 package --no-dependencies

      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: ${{ steps.root.outputs.dir }}/*.vsix
